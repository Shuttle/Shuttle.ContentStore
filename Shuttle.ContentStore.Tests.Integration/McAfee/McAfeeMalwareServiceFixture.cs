using System;
using System.Globalization;
using System.IO;
using System.Threading;
using Shuttle.ContentStore.McAfee;
using NUnit.Framework;

namespace Shuttle.ContentStore.Tests.Integration.McAfee
{
    [TestFixture]
    public class McAfeeMalwareServiceFixture
    {
        private void Poll(McAfeeMalwareService service, Document document, int timeoutSeconds)
        {
            var timeout = DateTime.Now.AddSeconds(timeoutSeconds);

            while (service.Poll(document) == ServiceStatus.Processing && DateTime.Now < timeout)
            {
                Thread.Sleep(5000);
            }
        }

        private void Exercise(Document document)
        {
            var configuration = McAfeeSection.Configuration();
            var api = new McAfeeApi(configuration);
            var service = new McAfeeMalwareService(configuration, api);

            service.Register(document);

            Assert.That(document.ContainsProperty("subId"), Is.True);
            Assert.That(document.ContainsProperty("status"), Is.False);
            Assert.That(document.ContainsProperty("severity"), Is.False);

            Poll(service, document, 120);

            Assert.That(document.ContainsProperty("subId"), Is.True);
            Assert.That(document.ContainsProperty("status"), Is.True);
            Assert.That(document.ContainsProperty("severity"), Is.True);

            var severity = int.Parse(document.GetSeverity());

            Assert.That(document.GetStatus(), Is.EqualTo("5"));
            Assert.That(severity, Is.Not.EqualTo(-2));
            Assert.That(severity, Is.Not.GreaterThan(1));

            api.Dispose();
        }

        [Test]
        public void Should_be_able_to_handle_a_benign_spreadsheet()
        {
            var document = new Document(Guid.NewGuid(), Guid.NewGuid(), "benign.xlsx",
                "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
                File.ReadAllBytes(Path.Combine(AppDomain.CurrentDomain.BaseDirectory, ".files\\benign.xlsx")),
                "integration-test", "system", DateTime.Now);

            Exercise(document);
        }

        [Test]
        public void Should_be_able_to_handle_a_macro_enabled_spreadsheet()
        {
            var document = new Document(Guid.NewGuid(), Guid.NewGuid(), "sanitize.xlsx",
                "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
                File.ReadAllBytes(Path.Combine(AppDomain.CurrentDomain.BaseDirectory, ".files\\sanitize.xlsm")),
                "integration-test", "system", DateTime.Now);

            Exercise(document);
        }

        [Test]
        public void Should_be_able_to_handle_a_text_file()
        {
            var document = new Document(Guid.NewGuid(), Guid.NewGuid(), "integration.txt", "text/plain",
                File.ReadAllBytes(Path.Combine(AppDomain.CurrentDomain.BaseDirectory, ".files\\integration.txt")),
                "integration-test", "system", DateTime.Now);

            Exercise(document);
        }
    }
}