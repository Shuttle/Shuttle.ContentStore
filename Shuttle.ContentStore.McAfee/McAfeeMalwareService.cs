using System;
using Newtonsoft.Json;
using RestSharp;
using Shuttle.Core.Contract;

namespace Shuttle.ContentStore.McAfee
{
    public class McAfeeMalwareService : IMalwareService
    {
        private readonly IMcAfeeApi _api;
        private readonly IMcAfeeConfiguration _configuration;

        public McAfeeMalwareService(IMcAfeeConfiguration configuration, IMcAfeeApi api)
        {
            Guard.AgainstNull(configuration, nameof(configuration));
            Guard.AgainstNull(api, nameof(api));

            _configuration = configuration;
            _api = api;
        }

        public ServiceStatus Register(Content content)
        {
            Guard.AgainstNull(content, nameof(content));

            var request = new RestRequest(_api.GetFullApiUrl("fileupload.php"))
            {
                Method = Method.POST,
                RequestFormat = DataFormat.Json
            };

            var data = new
            {
                data = new
                {
                    vmProfileList = _configuration.AnalyzerProfile,
                    submitType = 0,
                    messageId = content.Id.ToString("D"),
                    analyzeAgain = 1
                }
            };

            request.AddParameter("data", JsonConvert.SerializeObject(data));
            request.AddFileBytes("amas_filename", content.Bytes, content.FileName, content.ContentType);

            var response = _api.GetResponse(request).AsDynamic();

            GuardAgainstException(response);

            if (response.subId == null)
            {
                throw new McAfeeException($"Could not find 'subId' for content with id '{content.Id}'.");
            }

            content.SetProperty("subId", response.subId.ToString());

            return ServiceStatus.Registered;
        }

        public ServiceStatus Poll(Content content)
        {
            Guard.AgainstNull(content, nameof(content));

            var request = new RestRequest(_api.GetFullApiUrl($"samplestatus.php?jobId={content.GetSubId()}"))
            {
                Method = Method.GET,
                RequestFormat = DataFormat.Json
            };

            var response = _api.GetResponse(request).AsDynamic();

            GuardAgainstException(response);

            if (response.status == null)
            {
                throw new McAfeeException($"Could not find 'status' for content with id '{content.Id}'.");
            }

            var severity = -2;

            if (response.severity != null)
            {
                content.SetProperty("severity", response.severity.ToString());

                if (!int.TryParse(content.GetSeverity(), out severity))
                {
                    severity = -2;
                }
            }

            content.SetProperty("status", response.status.ToString());

            if (!int.TryParse(content.GetStatus(), out var status))
            {
                status = int.MinValue;
            }

            return status == -1
                ? ServiceStatus.Suspicious
                : status != 5 || severity == -6
                    ? ServiceStatus.Processing
                    : severity < -1 || severity > _configuration.AcceptableSeverity
                        ? ServiceStatus.Suspicious
                        : ServiceStatus.Passed;
        }

        private void GuardAgainstException(dynamic response)
        {
            if (response.success == null)
            {
                throw new McAfeeException("Could not retrieve the 'success' status from the response.");
            }

            if (!Convert.ToBoolean(response.success.ToString()))
            {
                throw new McAfeeException(response.errorMessage.ToString());
            }
        }
    }
}